package org.jooq.mcve.test.java;

import org.jooq.DSLContext;
import org.jooq.impl.DSL;
import org.jooq.mcve.java.Keys;
import org.jooq.mcve.java.tables.Author;
import org.jooq.mcve.java.tables.Book;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import java.sql.Connection;
import java.sql.DriverManager;
import java.util.Set;

import static org.jooq.mcve.java.Tables.AUTHOR;
import static org.jooq.mcve.java.Tables.BOOK;
import static org.junit.Assert.assertEquals;

public class JavaTest {

    public Connection connection;
    public DSLContext ctx;

    @Before
    public void setup() throws Exception {
        connection = DriverManager.getConnection("jdbc:h2:~/jooq-mcve-java-2", "sa", "");
        ctx = DSL.using(connection);
    }

    @After
    public void after() throws Exception {
        ctx = null;
        connection.close();
        connection = null;
    }

    @Test
    public void mcveTest() {
        Author a = AUTHOR.as("a");
        Book b = BOOK.as("b");
        var authorBooks = ctx
                .select(a, DSL.arrayAgg(b.NAME))
                .from(a)
                .innerJoin(b).onKey(Keys.FK_BOOK_AUTHOR)
                .groupBy(a)
                .fetchMap(r -> r.value1().getId(), r -> Set.of(r.value2()));

        assertEquals(Set.of("Foo", "Bar"), authorBooks.get(1));
        assertEquals(Set.of("Foobar"), authorBooks.get(2));
    }
}
